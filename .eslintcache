[{"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\index.tsx":"1","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\App.tsx":"2","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Home\\Home.tsx":"3","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\JoinRoom\\JoinRoom.tsx":"4","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\CreateRoom\\CreateRoom.tsx":"5","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Header\\Header.tsx":"6","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Lobby\\Lobby.tsx":"7","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\useChat.ts":"8","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\SideBar\\SideBar.tsx":"9","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\TrackCard\\TrackCard.tsx":"10","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\PointsRoom\\PointsRoom.tsx":"11","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\ProgressBar\\ProgressBar.tsx":"12","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Results\\Results.tsx":"13","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\ChatRoom\\ChatRoom.tsx":"14"},{"size":219,"mtime":1610311787540,"results":"15","hashOfConfig":"16"},{"size":1061,"mtime":1610311787512,"results":"17","hashOfConfig":"16"},{"size":941,"mtime":1610311787705,"results":"18","hashOfConfig":"16"},{"size":1902,"mtime":1610311787723,"results":"19","hashOfConfig":"16"},{"size":2099,"mtime":1610311787615,"results":"20","hashOfConfig":"16"},{"size":600,"mtime":1610311787663,"results":"21","hashOfConfig":"16"},{"size":6560,"mtime":1610311787766,"results":"22","hashOfConfig":"16"},{"size":3743,"mtime":1610400865455,"results":"23","hashOfConfig":"16"},{"size":4450,"mtime":1610311787838,"results":"24","hashOfConfig":"16"},{"size":1518,"mtime":1610311787856,"results":"25","hashOfConfig":"16"},{"size":2201,"mtime":1610311787784,"results":"26","hashOfConfig":"16"},{"size":710,"mtime":1610311787801,"results":"27","hashOfConfig":"16"},{"size":2391,"mtime":1610311787819,"results":"28","hashOfConfig":"16"},{"size":1731,"mtime":1610311787596,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2jgrwd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\index.tsx",[],["67","68"],"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\App.tsx",[],"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Home\\Home.tsx",[],"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\JoinRoom\\JoinRoom.tsx",["69"],"import React, { useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Grid, Input } from \"@material-ui/core\";\r\n\r\n\r\nconst JoinRoom = () => {\r\n  const roomId = String(localStorage.getItem('roomId'));\r\n  const [roomName, setRoomName] = React.useState(roomId ? roomId : \"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [formIsValid, setFormIsValid] = React.useState(false);\r\n\r\n  const handleRoomNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRoomName(event.target.value);\r\n  };\r\n\r\n  const handleUserNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserName(event.target.value);\r\n  };\r\n\r\n  const joinRoom = () => {\r\n    localStorage.setItem('userName', userName);\r\n    window.location.href = `/${roomName}`;\r\n  }\r\n\r\n  const validateForm = () => \r\n  {\r\n    if(userName && roomName)\r\n    {\r\n      setFormIsValid(true);\r\n    }\r\n    else\r\n    {\r\n      setFormIsValid(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    validateForm();\r\n    return () => {\r\n      localStorage.setItem('roomId', \"\");\r\n    }\r\n  }, [userName, roomName]);\r\n\r\n  return (\r\n    <>\r\n      <Grid  \r\n        container\r\n        direction=\"column\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n        alignItems=\"center\">\r\n\r\n      <form style={{marginTop: 300, width: 400 }} >\r\n        <Input style={{margin: 20}} value={userName} onChange={handleUserNameChange} placeholder=\"Username\" autoFocus fullWidth/>\r\n        <Input style={{margin: 20}} value={roomName} onChange={handleRoomNameChange} placeholder=\"Nom de la room\" fullWidth/>\r\n      </form>\r\n      <Button onClick={joinRoom} disabled={!formIsValid} variant=\"contained\" color=\"primary\" size=\"medium\" style={{background: \"#3dbd31\", fontWeight: \"bold\", marginTop: \"30px\"}}> Rejoindre la partie </Button>\r\n      </Grid>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinRoom;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\CreateRoom\\CreateRoom.tsx",["70"],"import React, { useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid, Input } from \"@material-ui/core\";\r\n\r\nconst CreateRoom = () => {\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [userNameIsValid, setUserNameIsValid] = React.useState(false);\r\n\r\n  const handleUserNameChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setUserName(event.target.value);\r\n  }\r\n\r\n  const saveUserName = () => {\r\n    localStorage.setItem('creatorRoom', \"true\");\r\n    localStorage.setItem('userName', userName);\r\n  }\r\n\r\n  const createRoom = (event: any) => {\r\n    event.preventDefault();\r\n    if(userName)\r\n    {\r\n      setUserNameIsValid(true);\r\n      const room = generateRandomCode(4);\r\n      saveUserName();\r\n      window.location.href = `${room}`\r\n    }\r\n    else\r\n    {\r\n      setUserNameIsValid(false);\r\n    }\r\n  }\r\n\r\n  const generateRandomCode = (length: number) => {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  \r\n    for(var i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    \r\n    return text.toUpperCase();\r\n  }\r\n\r\n  const validateForm = () => \r\n  {\r\n    if(userName)\r\n    {\r\n      setUserNameIsValid(true);\r\n    }\r\n    else\r\n    {\r\n      setUserNameIsValid(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    validateForm()\r\n  }, [userName]);\r\n\r\n  return (\r\n    <>\r\n      <Grid  \r\n        container\r\n        direction=\"column\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n        alignItems=\"center\">\r\n\r\n      <form style={{marginTop: 300, width: 400 }} onSubmit={createRoom}>\r\n        <Input value={userName} onChange={handleUserNameChange} placeholder=\"Username\" autoFocus fullWidth/>\r\n      </form>\r\n        <Button type=\"submit\" disabled={!userNameIsValid} onClick={createRoom} variant=\"contained\" color=\"primary\" size=\"medium\" style={{background: \"#3dbd31\", fontWeight: \"bold\", marginTop: \"30px\"}}> Cr√©er une partie </Button>\r\n      </Grid>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Header\\Header.tsx",["71"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\n\r\nimport logo from './logo.png';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Link to=\"/\">\r\n          <Typography variant=\"h6\" style={{color: \"white\"}}>\r\n            La Berri BlindTest\r\n          </Typography>\r\n        </Link>\r\n        <img src={logo} style={{height: \"40px\", marginLeft:\"10px\"}}/>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Lobby\\Lobby.tsx",["72","73","74","75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./Lobby.css\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport { Box, Grid, Slider, TextField, Typography } from \"@material-ui/core\";\r\nimport useChat from \"../useChat\";\r\nimport { Album, Mic, VolumeDown, VolumeUp } from \"@material-ui/icons\";\r\nimport TrackCard from \"../TrackCard/TrackCard\";\r\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport PointsRoom from \"../PointsRoom/PointsRoom\";\r\nimport Results from \"../Results/Results\";\r\n\r\n\r\nconst Lobby = (props: any) => {\r\n  const userName = String(localStorage.getItem('userName'));\r\n  const [isCreatorRoom, setIsCreatorRoom] = useState(String(localStorage.getItem('creatorRoom')));\r\n  const { roomId } = props.match.params;\r\n\r\n  if(!userName || userName === \"null\")\r\n  {\r\n    localStorage.setItem('roomId', roomId);\r\n    window.location.href = \"/join\";\r\n  }\r\n\r\n  const [volume, setVolume] = useState(75);\r\n  const [guess, setGuess] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [points, setPoints] = useState(0);\r\n  const [gameIsStarted, setGameIsStarted] = useState(false);\r\n  const [artistIsGuessed, setArtistIsGuessed] = useState(false);\r\n  const [titleIsGuessed, setTitleIsGuessed] = useState(false);\r\n  const [allTracks, setAllTracks] = useState([]);\r\n  const { users, gameIsFinished, messages, guesses, codeError, track, newTrack, sendMessage, sendGuess, launchParty } = useChat(roomId, userName);\r\n  const timer = React.useRef<any>();\r\n  let audioPlayer = new Audio();\r\n\r\n  useEffect(() =>\r\n  {\r\n    localStorage.setItem('creatorRoom', \"false\");\r\n  }, [gameIsStarted] );\r\n\r\n  if(codeError)\r\n  {\r\n    window.location.href = \"/\"\r\n  }\r\n\r\n  const handleVolumeChange = (event: any, newValue: any) => {\r\n    audioPlayer.volume = newValue / 100;\r\n    setVolume(newValue);\r\n  };\r\n\r\n  const handleGuessChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setGuess(event.target.value);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGameIsStarted(true);\r\n    launchParty();\r\n    sendGuess(artistIsGuessed, titleIsGuessed, points);\r\n    // setTimeout(launchParty, 2000);\r\n  }\r\n\r\n  const checkGuess = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    const titleWithoutAccent = track.title_short.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n    const artistWithoutAccent = track.artist.name.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n    const guessWithoutAccent = guess.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n    let newPoints: number = points;\r\n\r\n    if(guessWithoutAccent.toLowerCase().includes(titleWithoutAccent))\r\n    {\r\n      setTitleIsGuessed(true);\r\n      newPoints++;\r\n    }\r\n    if(guessWithoutAccent.toLowerCase().includes(artistWithoutAccent))\r\n    {\r\n      setArtistIsGuessed(true);\r\n      newPoints++;\r\n    }\r\n\r\n    setPoints(newPoints);\r\n    setGuess(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    sendGuess(artistIsGuessed, titleIsGuessed, points);\r\n  }, [points])\r\n\r\n  useEffect(() => {\r\n    if(newTrack)\r\n    {\r\n      setGameIsStarted(true);\r\n      setAllTracks(allTracks.concat(track));\r\n      console.log(allTracks);\r\n      if(!audioPlayer.paused) audioPlayer.pause(); \r\n      setGuess(\"\");\r\n      setTitleIsGuessed(false);\r\n      setArtistIsGuessed(false);\r\n      sendGuess(false, false, points);\r\n      setProgress(0);\r\n      audioPlayer.src = track.preview;\r\n      audioPlayer.play(); \r\n    }\r\n\r\n    return () => {\r\n    };\r\n  }, [track, newTrack]);\r\n\r\n  useEffect(() => {\r\n    console.log(guesses);\r\n  }, [guesses])\r\n\r\n  return (\r\n    <>\r\n      <audio ref={(ref:any) => audioPlayer = ref} />\r\n      <SideBar roomId={roomId} users={users} messages={messages} sendMessage={sendMessage}/>\r\n      <Grid style={{width: \"250px\", margin: \"5px\"}} container spacing={2}>\r\n        <Grid item>\r\n          {\r\n            volume >= 50 ? <VolumeUp/> : <VolumeDown />\r\n          }\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={volume} onChange={handleVolumeChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{marginRight: 280, marginTop: 200}}>\r\n        {!gameIsFinished ? \r\n          <> {\r\n            !gameIsStarted ? \r\n            <Box style={{padding: 10, position: \"fixed\", bottom: 0, width: \"100%\", textAlign: \"center\", marginBottom: 40}}>\r\n              <Button disabled={isCreatorRoom == \"false\" || isCreatorRoom == \"null\"} onClick={startGame} variant=\"contained\" color=\"primary\" size=\"large\" style={{background: \"#3dbd31\", fontWeight: \"bold\", marginRight: 280}}> Lancer la partie </Button>\r\n            </Box>\r\n            :\r\n            <Grid \r\n              container\r\n              direction=\"column\">\r\n              <div style={{alignSelf:\"center\", justifyContent:\"center\", textAlign:\"center\", alignItems:\"center\"}}>\r\n                <form onSubmit={checkGuess}>\r\n                    <TextField disabled={artistIsGuessed && titleIsGuessed} value={guess} style={{width: \"40em\"}} onChange={handleGuessChange} label={artistIsGuessed && titleIsGuessed ? \"Bon toutou\" : \"Titre/Artiste bg ?\"} autoFocus fullWidth/>\r\n                </form>\r\n                <ProgressBar value={progress} setProgress={setProgress} timer={timer} newTrack={newTrack} />\r\n                {\r\n                  artistIsGuessed ? <Mic style={artistIsGuessed ? {color:\"red\"}: {color:\"black\"}}/> : null\r\n                }\r\n                {\r\n                  titleIsGuessed ? <Album style={titleIsGuessed ? {color:\"green\"}: {color:\"black\"}}/>: null\r\n                }\r\n              </div>\r\n              <Grid container\r\n                    direction=\"row\" style={{marginTop: 40, marginLeft: 100}}>\r\n                <Box>\r\n                  <Typography variant=\"h6\" style={{color: \"black\"}}>\r\n                    Scores \r\n                  </Typography>\r\n                    <PointsRoom guesses={guesses} />\r\n                </Box>\r\n                {\r\n                  allTracks.length > 1 ? \r\n                  <div  style={{marginLeft: \"100px\"}}>\r\n                    <Typography variant=\"h6\" style={{color: \"black\"}}>\r\n                      Tu viens d'√©couter \r\n                    </Typography>\r\n                    <TrackCard track={allTracks[allTracks.length - 2]}/>\r\n                    \r\n                  </div>\r\n                  : null\r\n                }\r\n            </Grid>\r\n          </Grid>\r\n          } </>\r\n        : <Results guesses={guesses} />\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\useChat.ts",["77"],"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\SideBar\\SideBar.tsx",[],"C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\TrackCard\\TrackCard.tsx",["78"],"import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Card, CardContent, CardMedia } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      width: 450\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n      width: 120,\r\n      height: 120\r\n    },\r\n    controls: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n  }),\r\n);\r\n\r\nconst TrackCard = (props: any) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        image={props.track.album.cover_medium}\r\n        className={classes.cover}\r\n        title=\"Live from space album cover\"\r\n      />\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {props.track.title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {props.track.artist.name}\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrackCard;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\PointsRoom\\PointsRoom.tsx",["79"],"import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport { Mic, Album } from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      width: 450\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n      width: 100,\r\n    },\r\n    controls: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n  }),\r\n);\r\n\r\nconst PointsRoom = (props: any) => {\r\n  let allPlayersPoints: any[] = [];  const classes = useStyles();\r\n  \r\n  // const playerPointsSorted = props.guesses.sort(compare);\r\n\r\n  props.guesses.forEach((playerPoints: any) =>\r\n  {\r\n    allPlayersPoints.push(\r\n      <PointsPlayerCard playerPoints={playerPoints}/>\r\n    )\r\n  });\r\n  return (\r\n    <div style={{overflow: \"auto\", height: 400}}>\r\n      <Card className={classes.root}>\r\n        <Grid container direction=\"column\" >\r\n          {allPlayersPoints}\r\n        </Grid>\r\n      </Card>\r\n    </div>\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  const PointsPlayerCard = (props: any) => {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n  const player = props.playerPoints;\r\n  return (\r\n      <div className={classes.details} style={{margin: 10}}>\r\n        {/* <CardContent className={classes.content}> */}\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {props.playerPoints.senderUserName}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            {props.playerPoints.points} pts\r\n            <div style={{float: \"right\"}}>\r\n              <Mic style={player.artist ? {color:\"red\"}: {color:\"#707371\"}}/>\r\n              <Album style={player.title ? {color:\"green\"}: {color:\"#707371\"}}/>\r\n            </div>\r\n          </Typography>\r\n        {/* </CardContent> */}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PointsRoom;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\ProgressBar\\ProgressBar.tsx",["80"],"import React, { useEffect} from \"react\";\r\n\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n\r\nconst ProgressBar = (props: any) => {\r\n  useEffect(() => {\r\n    if(props.newTrack)\r\n    {\r\n      // console.log(props.value)\r\n      props.timer.current = setInterval(() => {\r\n        props.setProgress((oldProgress: number) => {\r\n          if (oldProgress === 100) {\r\n            return 0;\r\n          }\r\n          return oldProgress + 3.333;\r\n        });\r\n      }, 1000);\r\n    } \r\n    return () => {\r\n      clearInterval(props.timer.current);\r\n    }\r\n  }, [props.timer, props.newTrack]);\r\n\r\n  return (\r\n    <LinearProgress variant=\"determinate\" value={props.value} />\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\Results\\Results.tsx",["81","82","83","84","85","86","87","88"],"import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport { Mic, Album } from \"@material-ui/icons\";\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Results = (props:any) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  let podiumPoints: any[] = [];\r\n  \r\n  // const playerPointsSorted = props.guesses.sort(compare);\r\n\r\n\r\n  if(props.guesses.length > 3)\r\n  {\r\n    podiumPoints.push(\r\n      \"1er : \" + props.guesses[0].senderUserName + props.guesses[0].points\r\n    );\r\n\r\n    podiumPoints.push(\r\n      \"2√®me : \" + props.guesses[1].senderUserName + props.guesses[1].points\r\n    );\r\n\r\n    podiumPoints.push(\r\n      \"3√®me : \" + props.guesses[2].senderUserName +props.guesses[2].points\r\n    );\r\n  }\r\n  else\r\n  {\r\n    props.guesses.forEach((element: any, index: number) =>\r\n    {\r\n      let text = \"\";\r\n      if(index === 0)\r\n      {\r\n        text = \"1er : \";\r\n      }\r\n      else\r\n      {\r\n        text = (index + 1) + \"√®me : \";\r\n      }\r\n\r\n      podiumPoints.push(\r\n        text + element.senderUserName + \" (\" + element.points + \" pts)\"\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Le podium</h2>\r\n            {podiumPoints}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default Results;\r\n","C:\\Users\\aya\\Desktop\\WORK\\LA BERRI\\laberriblindtest\\laberriblindtest\\laberriblindtest\\src\\ChatRoom\\ChatRoom.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":44,"column":6,"nodeType":"95","endLine":44,"endColumn":26,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"94","line":59,"column":6,"nodeType":"95","endLine":59,"endColumn":16,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":17,"column":9,"nodeType":"100","endLine":17,"endColumn":70},{"ruleId":"101","severity":1,"message":"102","line":16,"column":25,"nodeType":"103","messageId":"104","endLine":16,"endColumn":41},{"ruleId":"93","severity":1,"message":"105","line":88,"column":6,"nodeType":"95","endLine":88,"endColumn":14,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":108,"column":6,"nodeType":"95","endLine":108,"endColumn":23,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":134,"column":47,"nodeType":"111","messageId":"112","endLine":134,"endColumn":49},{"ruleId":"109","severity":1,"message":"110","line":134,"column":75,"nodeType":"111","messageId":"112","endLine":134,"endColumn":77},{"ruleId":"93","severity":1,"message":"113","line":95,"column":6,"nodeType":"95","endLine":95,"endColumn":14,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":39,"column":9,"nodeType":"103","messageId":"104","endLine":39,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":5,"column":16,"nodeType":"103","messageId":"104","endLine":5,"endColumn":27},{"ruleId":"93","severity":1,"message":"117","line":23,"column":6,"nodeType":"95","endLine":23,"endColumn":35,"suggestions":"118"},{"ruleId":"101","severity":1,"message":"119","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":18},{"ruleId":"101","severity":1,"message":"120","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":22},{"ruleId":"101","severity":1,"message":"121","line":3,"column":36,"nodeType":"103","messageId":"104","endLine":3,"endColumn":41},{"ruleId":"101","severity":1,"message":"122","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":5,"column":16,"nodeType":"103","messageId":"104","endLine":5,"endColumn":27},{"ruleId":"101","severity":1,"message":"123","line":5,"column":29,"nodeType":"103","messageId":"104","endLine":5,"endColumn":33},{"ruleId":"101","severity":1,"message":"124","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":13},{"ruleId":"101","severity":1,"message":"125","line":6,"column":15,"nodeType":"103","messageId":"104","endLine":6,"endColumn":20},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateForm'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'setIsCreatorRoom' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'artistIsGuessed', 'sendGuess', and 'titleIsGuessed'. Either include them or remove the dependency array.",["130"],"React Hook useEffect has missing dependencies: 'allTracks', 'audioPlayer', 'points', and 'sendGuess'. Either include them or remove the dependency array. You can also do a functional update 'setAllTracks(a => ...)' if you only need 'allTracks' in the 'setAllTracks' call.",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'creatorRoom' and 'userName'. Either include them or remove the dependency array.",["132"],"'theme' is assigned a value but never used.","'CardContent' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["133"],"'Typography' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'Card' is defined but never used.","'Grid' is defined but never used.","'Mic' is defined but never used.","'Album' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [userName, roomName, validateForm]",{"range":"146","text":"147"},"Update the dependencies array to be: [userName, validateForm]",{"range":"148","text":"149"},"Update the dependencies array to be: [artistIsGuessed, points, sendGuess, titleIsGuessed]",{"range":"150","text":"151"},"Update the dependencies array to be: [track, newTrack, allTracks, audioPlayer, sendGuess, points]",{"range":"152","text":"153"},"Update the dependencies array to be: [creatorRoom, roomId, userName]",{"range":"154","text":"155"},"Update the dependencies array to be: [props.timer, props.newTrack, props]",{"range":"156","text":"157"},[1099,1119],"[userName, roomName, validateForm]",[1411,1421],"[userName, validateForm]",[3034,3042],"[artistIsGuessed, points, sendGuess, titleIsGuessed]",[3515,3532],"[track, newTrack, allTracks, audioPlayer, sendGuess, points]",[2786,2794],"[creatorRoom, roomId, userName]",[556,585],"[props.timer, props.newTrack, props]"]